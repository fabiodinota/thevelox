generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  user_id         Int               @id @default(autoincrement()) @db.UnsignedInt
  full_name       String            @db.VarChar(100)
  birth_date      DateTime          @db.Date
  country_code    String            @db.VarChar(255)
  phone_number    String            @db.VarChar(255)
  email           String            @db.VarChar(100)
  password        String            @db.VarChar(255)
  admin           Boolean?          @default(false)
  created_on      DateTime          @db.DateTime(0)
  favorites       favorites[]
  payment_methods payment_methods[]
  tickets         tickets[]
}

model favorites {
  favorite_id Int      @id @default(autoincrement()) @db.UnsignedInt
  user_id     Int      @db.UnsignedInt
  journey_id  Int      @db.UnsignedInt
  added_on    DateTime @db.DateTime(0)
  journeys    journeys @relation(fields: [journey_id], references: [journey_id], onDelete: NoAction, onUpdate: NoAction, map: "favorites_journey_id_foreign")
  users       users    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "favorites_user_id_foreign")

  @@index([journey_id], map: "favorites_journey_id_foreign")
  @@index([user_id], map: "favorites_user_id_foreign")
}

model journeys {
  journey_id        Int         @id @default(autoincrement()) @db.UnsignedInt
  line_id_start     String      @db.VarChar(255)
  line_id_end       String      @db.VarChar(255)
  departure_station String      @db.VarChar(255)
  arrival_station   String      @db.VarChar(255)
  departure_time    DateTime    @db.DateTime(0)
  arrival_time      DateTime    @db.DateTime(0)
  favorites         favorites[]
  tickets           tickets[]
}

model payment_methods {
  payment_method_id Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id           Int       @db.UnsignedInt
  type              String?   @db.VarChar(255)
  card_holder_name  String?   @db.VarChar(255)
  card_number       String?   @db.VarChar(255)
  expiration_date   String?   @db.VarChar(255)
  card_cvv          String?   @db.Char(4)
  paypal_email      String?   @db.VarChar(255)
  created_on        DateTime  @db.DateTime(0)
  last_updated      DateTime  @db.DateTime(0)
  users             users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "payment_methods_user_id_foreign")
  tickets           tickets[]

  @@index([user_id], map: "payment_methods_user_id_foreign")
}

model tickets {
  ticket_id         Int             @id @default(autoincrement()) @db.UnsignedInt
  user_id           Int             @db.UnsignedInt
  journey_id        Int             @db.UnsignedInt
  payment_method_id Int             @db.UnsignedInt
  journey_date      DateTime        @db.DateTime(0)
  booking_date      DateTime        @db.DateTime(0)
  price             Float?          @db.Float
  ticket_object     String?         @db.VarChar(2000)
  journeys          journeys        @relation(fields: [journey_id], references: [journey_id], onDelete: NoAction, onUpdate: NoAction, map: "tickets_journey_id_foreign")
  payment_methods   payment_methods @relation(fields: [payment_method_id], references: [payment_method_id], onDelete: NoAction, onUpdate: NoAction, map: "tickets_payment_method_id_foreign")
  users             users           @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "tickets_user_id_foreign")

  @@index([journey_id], map: "tickets_journey_id_foreign")
  @@index([payment_method_id], map: "tickets_payment_method_id_foreign")
  @@index([user_id], map: "tickets_user_id_foreign")
}
